
по уроку https://www.youtube.com/watch?v=eZFNkXAF1WM


1 Создать List View в разметке активити или фрагмента
2 Создать Item - один элемент списка в xml
3 получить доступ к ListView из активити
    private ListView listView;
4 получить ListView
    listView = findViewById(R.id.list_view);
5 Заполнение данными:
    1 Создать метод который будет возвращать список слов
           private List<String> initData (){
                return null;
            }
    2 Создаем новый лист
            List<String> list = new ArrayList <String>();
    3 Возвращаем list
             return list;
    4 Заполняем list.add("1");
6 Создать ArrayAdapter
            ArrayAdapter<String> adapter = new ArrayAdapter <>()

    Вкачестве параметра предать контекст getApplicationContext()
    или просто this

    и указать ресурс   android.R.layout.simple_list_item_1 - стандартный
    из библиотеки android

    передать список элементов массива (массив или коллекция)
            initData () или для наглядности вынесем список в переменную

7. Применить адаптер к списку listView
        listView.setAdapter(adapter);

       // Весь код находится в классе Copy1



1. Создаем класс Model
    1.Указываем нужные поля
        private int id;
        private  String name;
        private double prise;
    2. Создаем конструктор для удобной инициализации объекта Alt+Insert
          public Model(int id, String name, double prise) {
                this.id = id;
                this.name = name;
                this.prise = prise;
    3. Создаем геттеры и сеттеры
2. Создаем Adapter
    1. наследуемся от BaseAdapter public class Adapter extends BaseAdapter
    2. Имплементим методы
    3. Реализуем методы
    4. Создаем список моделей List<Model> list;
    5. Создать конструктор для более удобной инициализации

        public Adapter(List <Model> list) {
            this.list = list;
        }
    6. Добавить контекст в параметры конструктора
             public Adapter(Context context, List <Model> list)
    7. Создать     private LayoutInflater layoutInflater;
            - позволит получить доступ к нашим лэйаутам
    8. проинициализировать layoutInflater в конструкторе
        layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE)
    9. Реализовать getCount, getItem, getItemId
         return list.size();
         return list.get(position);
          return position;
    10. Реализовать getView

        1. вынести convertView в отделный объект
                View view = convertView;
        2. Проверить view
                view == null
        3.  view = layoutInflater.inflate()
            первый параметр - R.layout.item
            второй параметр - parent - куда инициализируется наш view
            третий параметр - false
        4. Инициализация данных в списке
                view.findViewById(R.id.text_view_item);
        5.  вынести и преобразовать в
             TextView textView =  view.findViewById(R.id.text_view_item);
        6. Передать в textView значения

            для этого создать метод который будет возвращать объект Model
            передать в метод какой-то int position
            переиспользовать метод getItem
            явно преобразовать к типу (Model)

             private Model getNumber(int position) {
                    return (Model)getItem(position);
                }

             получить компонент чтобы проставить его в textView.setText();
             getNumber(position);
             Ctrl+Alt+V преобразуем в  - Model model = getNumber(position);

             и передаем в  textView.setText(model.getName());


3. Используем адаптер в MainActivity
    переделываем adapter  Adapter myAdapter = new Adapter(this, )
    переделать метод initData  из :
        private List <String> initData() {
                List <String> list = new ArrayList <String>();
                list.add("1");
                list.add("2");
                list.add("3");
                list.add("4");
                list.add("5");
                list.add("6");
                list.add("7");
                list.add("8");
                list.add("9");
                list.add("10");


                return list;
            }
    в:
       private List <Model> initData() {
             List <Model> list = new ArrayList <Model>();
             list.add(new Model(1, "1", 111));
             list.add(new Model(2, "2", 222));
             list.add(new Model(3, "3", 333));
             list.add(new Model(4, "4", 444));
             list.add(new Model(5, "5", 555));
             list.add(new Model(6, "6", 666));
             list.add(new Model(7, "7", 777));
             list.add(new Model(8, "8", 888));
             list.add(new Model(9, "9", 999));


             return list;
         }



































